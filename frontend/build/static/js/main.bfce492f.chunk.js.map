{"version":3,"sources":["constants/productConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Message.js","components/Loader.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/Rating.js","components/Meta.js","actions/productActions.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/Product.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["PRODUCT_LIST","PRODUCT_DETAILS","PRODUCT_DELETE","PRODUCT_CREATE","PRODUCT_UPDATE","PRODUCT_CREATE_REVIEW","PRODUCT_TOP","USER_LOGIN","USER_REGISTER","USER_DETAILS","USER_UPDATE_PROFILE","USER_LIST","USER_DELETE","USER_UPDATE","ORDER_CREATE","ORDER_DETAILS","ORDER_PAY","ORDER_LIST_MY","ORDER_LIST","_REQUEST","_SUCCESS","_FAIL","ORDER_DELIVER","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","_RESET","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyWord","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","FormContainer","xs","md","LoginScreen","location","email","setEmail","password","setPassword","redirect","search","split","useEffect","post","setItem","stringify","login","Group","controlId","Label","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","Rating","text","color","Meta","description","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","createProduct","ProductScreen","match","qty","setQty","rating","setRating","comment","setComment","successProductReview","errorProductReview","alert","params","Image","src","image","alt","fluid","ListGroup","numReviews","price","Card","countInStock","as","Array","keys","key","disabled","length","review","_id","createdAt","productId","row","addToCart","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","currItem","toFixed","Product","Img","Body","Title","Text","Paginate","Pagination","active","ProductCarousel","Carousel","pause","Caption","HomeScreen","sm","lg","xl","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setDescription","setPrice","setImage","setBrand","setCategory","setCountInStock","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bfce492f.chunk.js","sourcesContent":["export const PRODUCT_LIST = {\r\n    _REQUEST: 'PRODUCT_LIST_REQUEST',\r\n    _SUCCESS: 'PRODUCT_LIST_SUCCESS',\r\n    _FAIL: 'PRODUCT_LIST_FAIL',\r\n}\r\n\r\nexport const PRODUCT_DETAILS = {\r\n    _REQUEST: 'PRODUCT_DETAILS_REQUEST',\r\n    _SUCCESS: 'PRODUCT_DETAILS_SUCCESS',\r\n    _FAIL: 'PRODUCT_DETAILS_FAIL',\r\n}\r\n\r\nexport const PRODUCT_DELETE = {\r\n    _REQUEST: 'PRODUCT_DELETE_REQUEST',\r\n    _SUCCESS: 'PRODUCT_DELETE_SUCCESS',\r\n    _FAIL: 'PRODUCT_DELETE_FAIL',\r\n}\r\n\r\nexport const PRODUCT_CREATE = {\r\n    _REQUEST: 'PRODUCT_CREATE_REQUEST',\r\n    _SUCCESS: 'PRODUCT_CREATE_SUCCESS',\r\n    _FAIL: 'PRODUCT_CREATE_FAIL',\r\n    _RESET: 'PRODUCT_CREATE_RESET',\r\n}\r\n\r\nexport const PRODUCT_UPDATE = {\r\n    _REQUEST: 'PRODUCT_UPDATE_REQUEST',\r\n    _SUCCESS: 'PRODUCT_UPDATE_SUCCESS',\r\n    _FAIL: 'PRODUCT_UPDATE_FAIL',\r\n    _RESET: 'PRODUCT_UPDATE_RESET',\r\n}\r\n\r\nexport const PRODUCT_CREATE_REVIEW = {\r\n    _REQUEST: 'PRODUCT_CREATE_REVIEW_REQUEST',\r\n    _SUCCESS: 'PRODUCT_CREATE_REVIEW_SUCCESS',\r\n    _FAIL: 'PRODUCT_CREATE_REVIEW_FAIL',\r\n    _RESET: 'PRODUCT_CREATE_REVIEW_RESET',\r\n}\r\n\r\nexport const PRODUCT_TOP = {\r\n    _REQUEST: 'PRODUCT_TOP_REQUEST',\r\n    _SUCCESS: 'PRODUCT_TOP_SUCCESS',\r\n    _FAIL: 'PRODUCT_TOP_FAIL',\r\n}\r\n","export const USER_LOGIN = {\r\n    _REQUEST: 'USER_LOGIN_REQUEST',\r\n    _SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    _FAIL: 'USER_LOGIN_FAIL',\r\n}\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER = {\r\n    _REQUEST: 'USER_REGISTER_REQUEST',\r\n    _SUCCESS: 'USER_REGISTER_SUCCESS',\r\n    _FAIL: 'USER_REGISTER_FAIL',\r\n}\r\n\r\nexport const USER_DETAILS = {\r\n    _REQUEST: 'USER_DETAILS_REQUEST',\r\n    _SUCCESS: 'USER_DETAILS_SUCCESS',\r\n    _FAIL: 'USER_DETAILS_FAIL',\r\n    _RESET: 'USER_DETAILS_RESET',\r\n}\r\n\r\nexport const USER_UPDATE_PROFILE = {\r\n    _REQUEST: 'USER_UPDATE_REQUEST',\r\n    _SUCCESS: 'USER_UPDATE_SUCCESS',\r\n    _FAIL: 'USER_UPDATE_FAIL',\r\n    _RESET: 'USER_UPDATE_RESET',\r\n}\r\n\r\nexport const USER_LIST = {\r\n    _REQUEST: 'USER_LIST_REQUEST',\r\n    _SUCCESS: 'USER_LIST_SUCCESS',\r\n    _FAIL: 'USER_LIST_FAIL',\r\n    _RESET: 'USER_LIST_RESET',\r\n}\r\n\r\nexport const USER_DELETE = {\r\n    _REQUEST: 'USER_DELETE_REQUEST',\r\n    _SUCCESS: 'USER_DELETE_SUCCESS',\r\n    _FAIL: 'USER_DELETE_FAIL',\r\n}\r\n\r\nexport const USER_UPDATE = {\r\n    _REQUEST: 'USER_UPDATE_REQUEST',\r\n    _SUCCESS: 'USER_UPDATE_SUCCESS',\r\n    _FAIL: 'USER_UPDATE_FAIL',\r\n    _RESET: 'USER_UPDATE_RESET',\r\n}\r\n","export const ORDER_CREATE = {\r\n    _REQUEST: 'ORDER_CREATE_REQUEST',\r\n    _SUCCESS: 'ORDER_CREATE_SUCCESS',\r\n    _FAIL: 'ORDER_CREATE_FAIL',\r\n}\r\n\r\nexport const ORDER_DETAILS = {\r\n    _REQUEST: 'ORDER_DETAILS_REQUEST',\r\n    _SUCCESS: 'ORDER_DETAILS_SUCCESS',\r\n    _FAIL: 'ORDER_DETAILS_FAIL',\r\n}\r\n\r\nexport const ORDER_PAY = {\r\n    _REQUEST: 'ORDER_PAY_REQUEST',\r\n    _SUCCESS: 'ORDER_PAY_SUCCESS',\r\n    _FAIL: 'ORDER_PAY_FAIL',\r\n    _RESET: 'ORDER_PAY_RESET',\r\n}\r\n\r\nexport const ORDER_LIST_MY = {\r\n    _REQUEST: 'ORDER_LIST_MY_REQUEST',\r\n    _SUCCESS: 'ORDER_LIST_MY_SUCCESS',\r\n    _FAIL: 'ORDER_LIST_MY_FAIL',\r\n    _RESET: 'ORDER_LIST_MY_RESET',\r\n}\r\n\r\nexport const ORDER_LIST = {\r\n    _REQUEST: 'ORDER_LIST_REQUEST',\r\n    _SUCCESS: 'ORDER_LIST_SUCCESS',\r\n    _FAIL: 'ORDER_LIST_FAIL',\r\n}\r\n\r\nexport const ORDER_DELIVER = {\r\n    _REQUEST: 'ORDER_DELIVER_REQUEST',\r\n    _SUCCESS: 'ORDER_DELIVER_SUCCESS',\r\n    _FAIL: 'ORDER_DELIVER_FAIL',\r\n    _RESET: 'ORDER_DELIVER_RESET',\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderDeliverReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = thunk\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n    PRODUCT_LIST,\r\n    PRODUCT_DETAILS,\r\n    PRODUCT_DELETE,\r\n    PRODUCT_CREATE,\r\n    PRODUCT_UPDATE,\r\n    PRODUCT_CREATE_REVIEW,\r\n    PRODUCT_TOP,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST._REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST._SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page,\r\n            }\r\n        case PRODUCT_LIST._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n    state = { product: { reviews: [] } },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS._REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS._SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE._REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DELETE._SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE._REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_CREATE._SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE._RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE._REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_UPDATE._SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE._RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW._REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_CREATE_REVIEW._SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW._RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP._REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP._SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n    state = { cartItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(\r\n                (x) => x.product === item.product\r\n            )\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === existItem.product ? item : x\r\n                    ),\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(\r\n                    (item) => item.product != action.payload\r\n                ),\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n    USER_DELETE,\r\n    USER_DETAILS,\r\n    USER_LIST,\r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_REGISTER,\r\n    USER_UPDATE,\r\n    USER_UPDATE_PROFILE,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN._REQUEST:\r\n            return { loading: true, ...state }\r\n        case USER_LOGIN._SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER._REQUEST:\r\n            return { loading: true, ...state }\r\n        case USER_REGISTER._SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS._REQUEST:\r\n            return { loading: true, ...state }\r\n        case USER_DETAILS._SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS._RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE._REQUEST:\r\n            return { loading: true, ...state }\r\n        case USER_UPDATE_PROFILE._SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST._REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST._SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST._RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE._REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE._SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE._REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE._SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE._FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE._RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    ORDER_CREATE,\r\n    ORDER_DELIVER,\r\n    ORDER_DETAILS,\r\n    ORDER_LIST,\r\n    ORDER_LIST_MY,\r\n    ORDER_PAY,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE._REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_CREATE._SUCCESS:\r\n            return { loading: false, success: true, order: action.payload }\r\n\r\n        case ORDER_CREATE._FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS._REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case ORDER_DETAILS._SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n\r\n        case ORDER_DETAILS._FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY._REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_PAY._SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case ORDER_PAY._FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_PAY._RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER._REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_DELIVER._SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case ORDER_DELIVER._FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_DELIVER._RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY._REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_LIST_MY._SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n\r\n        case ORDER_LIST_MY._FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_LIST_MY._RESET:\r\n            return { orders: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST._REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_LIST._SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n\r\n        case ORDER_LIST._FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_LIST._RESET:\r\n            return { orders: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyWord] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type=\"text\"\r\n                name=\"q\"\r\n                onChange={(e) => setKeyWord(e.target.value)}\r\n                placeholder=\"Search Products...\"\r\n                className=\"mr-sm-2 ml-sm-5\"\r\n            ></Form.Control>\r\n            <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_DELETE,\r\n    USER_DETAILS,\r\n    USER_LIST,\r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_REGISTER,\r\n    USER_UPDATE,\r\n    USER_UPDATE_PROFILE,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN._REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/users/login`,\r\n            { email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN._SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_LOGIN._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS._RESET })\r\n    dispatch({ type: ORDER_LIST_MY._RESET })\r\n    dispatch({ type: USER_LIST._RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER._REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/users`,\r\n            { name, email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER._SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN._SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_REGISTER._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_DETAILS._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_PROFILE._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_LIST._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_LIST._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DELETE._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE._SUCCESS,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_DELETE._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE._SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_UPDATE._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route\r\n                            render={({ history }) => (\r\n                                <SearchBox history={history} />\r\n                            )}\r\n                        ></Route>\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link>\r\n                                    <i className=\"fas fa-shopping-cart\"></i>{' '}\r\n                                    Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown\r\n                                    title={userInfo.user}\r\n                                    id=\"username\"\r\n                                >\r\n                                    <LinkContainer to=\"/profile\">\r\n                                        <NavDropdown.Item>\r\n                                            Profile\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Log Out\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link>\r\n                                        <i className=\"fas fa-user\"></i> Sign In\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin == 'true' && (\r\n                                <NavDropdown title=\"Admin\" id=\"adminMenu\">\r\n                                    <LinkContainer to=\"/admin/userlist\">\r\n                                        <NavDropdown.Item>\r\n                                            Users\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/admin/productlist\">\r\n                                        <NavDropdown.Item>\r\n                                            Products\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/admin/orderlist\">\r\n                                        <NavDropdown.Item>\r\n                                            Orders\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Sign In\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New Customer?{' '}\r\n                    <Link\r\n                        to={\r\n                            redirect\r\n                                ? `/register?redirect=${redirect}`\r\n                                : '/register'\r\n                        }\r\n                    >\r\n                        Sign Up\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password != confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Enter Name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Label>ConfirmPassword</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Sign Up\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Have An Account?{' '}\r\n                    <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n                    >\r\n                        Log In\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 1\r\n                            ? 'fas fa-star'\r\n                            : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 2\r\n                            ? 'fas fa-star'\r\n                            : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 3\r\n                            ? 'fas fa-star'\r\n                            : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 4\r\n                            ? 'fas fa-star'\r\n                            : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 5\r\n                            ? 'fas fa-star'\r\n                            : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"keywords\" content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To ProShop',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'electronics, buy electronics, cheap electronics',\r\n}\r\n\r\nexport default Meta\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST,\r\n    PRODUCT_DETAILS,\r\n    PRODUCT_DELETE,\r\n    PRODUCT_CREATE,\r\n    PRODUCT_UPDATE,\r\n    PRODUCT_CREATE_REVIEW,\r\n    PRODUCT_TOP,\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n    dispatch\r\n) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST._REQUEST })\r\n\r\n        const { data } = await axios.get(\r\n            `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n        )\r\n\r\n        dispatch({ type: PRODUCT_LIST._SUCCESS, payload: data })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PRODUCT_LIST._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP._REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({ type: PRODUCT_TOP._SUCCESS, payload: data })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PRODUCT_TOP._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS._REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({ type: PRODUCT_DETAILS._SUCCESS, payload: data })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE._SUCCESS,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_UPDATE._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/${product._id}`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW._SUCCESS,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n    listProductDetails,\r\n    createProductReview,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(\r\n        (state) => state.productReviewCreate\r\n    )\r\n    const {\r\n        success: successProductReview,\r\n        error: errorProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW._RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            createProductReview(match.params.id, {\r\n                rating,\r\n                comment,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className=\"btn btn-light my-3\" to=\"/\">\r\n                Go Back\r\n            </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image\r\n                                src={product.image}\r\n                                alt={product.name}\r\n                                fluid\r\n                            />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup>\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating\r\n                                        value={product.rating}\r\n                                        text={`${product.numReviews} reviews`}\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price: ${product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: ${product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price: </Col>\r\n                                            <Col>\r\n                                                <strong>\r\n                                                    ${product.price}\r\n                                                </strong>{' '}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0\r\n                                                    ? 'In stock'\r\n                                                    : 'Out of stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        value={qty}\r\n                                                        onChange={(e) =>\r\n                                                            setQty(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {[\r\n                                                            ...Array(\r\n                                                                product.countInStock\r\n                                                            ).keys(),\r\n                                                        ].map((x) => (\r\n                                                            <option\r\n                                                                key={x + 1}\r\n                                                                value={x + 1}\r\n                                                            >\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className=\"btn-block\"\r\n                                            type=\"button\"\r\n                                            disabled={product.countInStock == 0}\r\n                                        >\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && (\r\n                                <Message>No reviews</Message>\r\n                            )}\r\n                            <ListGroup variant=\"flush\">\r\n                                {product.reviews.map((review) => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && (\r\n                                        <Message variant=\"danger\">\r\n                                            {errorProductReview}\r\n                                        </Message>\r\n                                    )}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId=\"rating\">\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    value={rating}\r\n                                                    onChange={(e) =>\r\n                                                        setRating(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <option value=\"\">\r\n                                                        Select...\r\n                                                    </option>\r\n                                                    <option value=\"1\">\r\n                                                        1 - Poor\r\n                                                    </option>\r\n                                                    <option value=\"2\">\r\n                                                        2 - Fair\r\n                                                    </option>\r\n                                                    <option value=\"3\">\r\n                                                        3 - Good\r\n                                                    </option>\r\n                                                    <option value=\"4\">\r\n                                                        4 - Very Good\r\n                                                    </option>\r\n                                                    <option value=\"5\">\r\n                                                        5 - Excellent\r\n                                                    </option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"comment\">\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control\r\n                                                    as=\"textarea\"\r\n                                                    row=\"3\"\r\n                                                    value={comment}\r\n                                                    onChange={(e) =>\r\n                                                        setComment(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                ></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"primary\"\r\n                                            >\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                        <Message>\r\n                                            Please{' '}\r\n                                            <Link to={'/login'}>Sign In</Link>{' '}\r\n                                            to write a review\r\n                                        </Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkOutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length == 0 ? (\r\n                    <Message>\r\n                        Your cart is empty <Link to=\"/\">Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        {cartItems.map((item) => {\r\n                            return (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image\r\n                                                src={item.image}\r\n                                                alt={item.name}\r\n                                                fluid\r\n                                                rounded\r\n                                            />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link\r\n                                                to={`/product/${item.product}`}\r\n                                            ></Link>\r\n                                        </Col>\r\n                                        <Col md={2}>${item.price}</Col>\r\n                                        <Col md={2}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) =>\r\n                                                    dispatch(\r\n                                                        addToCart(\r\n                                                            item.product,\r\n                                                            Number(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        )\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                {[\r\n                                                    ...Array(\r\n                                                        item.countInStock\r\n                                                    ).keys(),\r\n                                                ].map((x) => (\r\n                                                    <option\r\n                                                        key={x + 1}\r\n                                                        value={x + 1}\r\n                                                    >\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                variant=\"light\"\r\n                                                onClick={() =>\r\n                                                    removeFromCartHandler(\r\n                                                        item.product\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <i className=\"fas fa-trash\"></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )\r\n                        })}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                SubTotal (\r\n                                {cartItems.reduce(\r\n                                    (acc, currItem) => acc + currItem.qty,\r\n                                    0\r\n                                )}\r\n                                ) items\r\n                            </h2>\r\n                            $\r\n                            {cartItems\r\n                                .reduce(\r\n                                    (acc, currItem) =>\r\n                                        acc + currItem.qty * currItem.price,\r\n                                    0\r\n                                )\r\n                                .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type=\"button\"\r\n                                className=\"btn-block\"\r\n                                disabled={cartItems.length == 0}\r\n                                onClick={checkOutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item></ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer\r\n                        key={x + 1}\r\n                        to={\r\n                            !isAdmin\r\n                                ? keyword\r\n                                    ? `/search/${keyword}/page/${x + 1}`\r\n                                    : `/page/${x + 1}`\r\n                                : `/admin/productlist/${x + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={x + 1 == page}>\r\n                            {x + 1}\r\n                        </Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector((state) => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [])\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <Carousel pause=\"hover\" className=\"bg-dark\">\r\n            {products.map((product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className=\"carousel-caption\">\r\n                            <h2>\r\n                                {product.name} ({product.price})\r\n                            </h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector((state) => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <Fragment>\r\n            <Meta />\r\n            {!keyword ? (\r\n                <ProductCarousel />\r\n            ) : (\r\n                <Link to=\"/\" className=\"btn btn-light\">\r\n                    Go Back\r\n                </Link>\r\n            )}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        {products.map((product, key) => (\r\n                            <Col key={key} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate\r\n                        pages={pages}\r\n                        page={page}\r\n                        keyword={keyword ? keyword : ''}\r\n                    />\r\n                </>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.user) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.user)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password != confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user.id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant=\"danger\">{message}</Message>}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {success && (\r\n                    <Message variant=\"success\">Profile Updated</Message>\r\n                )}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"name\"\r\n                            placeholder=\"Enter Name\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>ConfirmPassword</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant=\"danger\">{errorOrders}</Message>\r\n                ) : (\r\n                    <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className=\"table-sm\"\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i\r\n                                                className=\"fas fa-times\"\r\n                                                style={{ color: 'red' }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i\r\n                                                className=\"fas fa-times\"\r\n                                                style={{ color: 'red' }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer\r\n                                            to={`/order/${order._id}`}\r\n                                        >\r\n                                            <Button\r\n                                                className=\"btn-sm\"\r\n                                                variant=\"light\"\r\n                                            >\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE,\r\n    ORDER_DELIVER,\r\n    ORDER_DETAILS,\r\n    ORDER_LIST,\r\n    ORDER_LIST_MY,\r\n    ORDER_PAY,\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ORDER_CREATE._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ORDER_DETAILS._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({ type: ORDER_PAY._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ORDER_PAY._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DELIVER._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ORDER_DELIVER._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_LIST_MY._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_LIST._REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST._SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ORDER_LIST._FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Address\"\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter City\"\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"postalCode\">\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Postal Code\"\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Country\"\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"PayPal or Credit Card\"\r\n                            id=\"Paypal\"\r\n                            name=\"paymentMethod\"\r\n                            value=\"PayPal\"\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    // Calculate prices\r\n    cart.itemsPrice = addDecimals(\r\n        cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address},{' '}\r\n                                {cart.shippingAddress.city},{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method:</h2>\r\n                            <p>\r\n                                <strong>Method:</strong>\r\n                                {cart.paymentMethod},{' '}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items:</h2>\r\n                            {cart.cartItems.length == 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} =\r\n                                                    ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && (\r\n                                    <Message variant=\"danger\">{error}</Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    className=\"btn-block\"\r\n                                    disabled={cart.cartItems == 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Placer Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n    getOrderDetails,\r\n    payOrder,\r\n    deliverOrder,\r\n} from '../actions/orderActions'\r\nimport { ORDER_PAY, ORDER_DELIVER } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        // Calculate prices\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce(\r\n                (acc, item) => acc + item.price * item.qty,\r\n                0\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            if (!order || order._id !== orderId) {\r\n                dispatch({ type: ORDER_PAY._RESET })\r\n                dispatch({ type: ORDER_DELIVER._RESET })\r\n\r\n                dispatch(getOrderDetails(orderId))\r\n            }\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [order, orderId, successPay, successDeliver, order])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong>\r\n                                {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>\r\n                                <a href={`mailto:${order.user.email}`}>\r\n                                    {order.user.email}\r\n                                </a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address},{' '}\r\n                                {order.shippingAddress.city},{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant=\"success\">\r\n                                    Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">\r\n                                    Not Delivered\r\n                                </Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method:</h2>\r\n                            <p>\r\n                                <strong>Method:</strong>\r\n                                {order.paymentMethod},{' '}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant=\"success\">\r\n                                    Paid on {order.paidAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items:</h2>\r\n                            {order.orderItems.length == 0 ? (\r\n                                <Message>Order is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} =\r\n                                                    ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                order.isPaid &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-block\"\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark as Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector((state) => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin == 'true') {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th>DETAILS</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>\r\n                                    <a href={`mailto:${user.email}`}>\r\n                                        {user.email}\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    {user.isAdmin == 'true' ? (\r\n                                        <i\r\n                                            className=\"fas fa-check\"\r\n                                            style={{ color: 'green' }}\r\n                                        ></i>\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"fas fa-times\"\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer\r\n                                        to={`/admin/user/${user._id}/edit`}\r\n                                    >\r\n                                        <Button\r\n                                            variant=\"light\"\r\n                                            className=\"btn-sm\"\r\n                                        >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button\r\n                                        variant=\"danger\"\r\n                                        className=\"btn-sm\"\r\n                                        onClick={() => deleteHandler(user._id)}\r\n                                    >\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState('false')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate)\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE._RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id != userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && (\r\n                    <Message variant=\"danger\">{errorUpdate}</Message>\r\n                )}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant=\"danger\">{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter Name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"isAdmin\">\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Is Admin\"\r\n                                value={isAdmin}\r\n                                checked={isAdmin == 'true'}\r\n                                onChange={(e) => {\r\n                                    if (e.target.checked == true) {\r\n                                        setIsAdmin('true')\r\n                                    } else {\r\n                                        setIsAdmin('false')\r\n                                    }\r\n                                }}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Update User\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n    listProducts,\r\n    deleteProduct,\r\n    createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector((state) => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    const productDelete = useSelector((state) => state.productDelete)\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete,\r\n    } = productDelete\r\n\r\n    const productCreate = useSelector((state) => state.productCreate)\r\n    const {\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n        product: createdProduct,\r\n    } = productCreate\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE._RESET })\r\n\r\n        if (userInfo.isAdmin != 'true') {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [\r\n        dispatch,\r\n        history,\r\n        userInfo,\r\n        successDelete,\r\n        successCreate,\r\n        createProduct,\r\n        pageNumber,\r\n    ])\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className=\"my-3\" onClick={createProductHandler}>\r\n                        <i className=\"fas fa-plus\"></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className=\"table-sm\"\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map((product) => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer\r\n                                            to={`/admin/product/${product._id}/edit`}\r\n                                        >\r\n                                            <Button\r\n                                                variant=\"light\"\r\n                                                className=\"btn-sm\"\r\n                                            >\r\n                                                <i className=\"fas fa-edit\"></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button\r\n                                            variant=\"danger\"\r\n                                            className=\"btn-sm\"\r\n                                            onClick={() =>\r\n                                                deleteHandler(product._id)\r\n                                            }\r\n                                        >\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE._RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id != productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setDescription(product.description)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n            }\r\n        }\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && (\r\n                    <Message variant=\"danger\">{errorUpdate}</Message>\r\n                )}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant=\"danger\">{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter Name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"price\">\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Enter price\"\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"image\">\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter image url\"\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id=\"image-file\"\r\n                                label=\"Choose File\"\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            ></Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"brand\">\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter brand\"\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"countInStock\">\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Enter countInStock\"\r\n                                value={countInStock}\r\n                                onChange={(e) =>\r\n                                    setCountInStock(e.target.value)\r\n                                }\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"category\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter category\"\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"description\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter description\"\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Update Product\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector((state) => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin == 'true') {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    console.log(orders)\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"fas fa-times\"\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"fas fa-times\"\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button\r\n                                            variant=\"light\"\r\n                                            className=\"btn-sm\"\r\n                                        >\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport HomeScreen from './screens/HomeScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n    return (\n        <Router>\n            <Header />\n            <main className=\"py-3\">\n                <Container>\n                    <Route path=\"/order/:id\" component={OrderScreen} exact />\n                    <Route path=\"/shipping\" component={ShippingScreen} exact />\n                    <Route path=\"/payment\" component={PaymentScreen} exact />\n                    <Route\n                        path=\"/placeorder\"\n                        component={PlaceOrderScreen}\n                        exact\n                    />\n                    <Route path=\"/login\" component={LoginScreen} exact />\n                    <Route path=\"/register\" component={RegisterScreen} exact />\n                    <Route path=\"/profile\" component={ProfileScreen} exact />\n                    <Route path=\"/product/:id\" component={ProductScreen} />\n                    <Route path=\"/cart/:id?\" component={CartScreen} />\n                    <Route path=\"/admin/userlist\" component={UserListScreen} />\n                    <Route\n                        path=\"/admin/user/:id/edit\"\n                        component={UserEditScreen}\n                    />\n                    <Route\n                        path=\"/admin/productlist\"\n                        component={ProductListScreen}\n                        exact\n                    />\n                    <Route\n                        path=\"/admin/productlist/:pageNumber\"\n                        component={ProductListScreen}\n                        exact\n                    />\n                    <Route\n                        path=\"/admin/product/:id/edit\"\n                        component={ProductEditScreen}\n                    />\n                    <Route\n                        path=\"/admin/orderlist\"\n                        component={OrderListScreen}\n                    />\n                    <Route\n                        path=\"/search/:keyword\"\n                        component={HomeScreen}\n                        exact\n                    />\n                    <Route\n                        path=\"/page/:pageNumber\"\n                        component={HomeScreen}\n                        exact\n                    />\n                    <Route\n                        path=\"/search/:keyword/page/:pageNumber\"\n                        component={HomeScreen}\n                        exact\n                    />\n                    <Route path=\"/\" component={HomeScreen} exact />\n                </Container>\n            </main>\n            <Footer />\n        </Router>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}